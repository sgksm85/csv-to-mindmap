/**
 * Miro Developer Platform
 * <img src=\"https://content.pstmn.io/47449ea6-0ef7-4af2-bac1-e58a70e61c58/aW1hZ2UucG5n\" width=\"1685\" height=\"593\">  ### Miro Developer Platform concepts  - New to the Miro Developer Platform? Interested in learning more about platform concepts?? [Read our introduction page](https://beta.developers.miro.com/docs/introduction) and familiarize yourself with the Miro Developer Platform capabilities in a few minutes.   ### Getting started with the Miro REST API  - [Quickstart (video):](https://beta.developers.miro.com/docs/try-out-the-rest-api-in-less-than-3-minutes) try the REST API in less than 3 minutes. - [Quickstart (article):](https://beta.developers.miro.com/docs/build-your-first-hello-world-app-1) get started and try the REST API in less than 3 minutes.   ### Miro REST API tutorials  Check out our how-to articles with step-by-step instructions and code examples so you can:  - [Get started with OAuth 2.0 and Miro](https://beta.developers.miro.com/docs/getting-started-with-oauth)   ### Miro App Examples  Clone our [Miro App Examples repository](https://github.com/miroapp/app-examples) to get inspiration, customize, and explore apps built on top of Miro\'s Developer Platform 2.0.
 *
 * The version of the OpenAPI document: v2.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import { Caption } from './caption';
import { ConnectorStyle } from './connectorStyle';
import { CreatedBy } from './createdBy';
import { ItemConnectionWithLinks } from './itemConnectionWithLinks';
import { ModifiedBy } from './modifiedBy';
import { SelfLink } from './selfLink';
/**
 * @internal
 * Contains the result data.
 */
export declare class ConnectorWithLinks {
    /**
     * Blocks of text you want to display on the connector.
     */
    'captions'?: Array<Caption>;
    /**
     * Date and time when the connector was created. <br>Format: UTC, adheres to [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601), includes a [trailing Z offset](https://en.wikipedia.org/wiki/ISO_8601#Coordinated_Universal_Time_(UTC)).
     */
    'createdAt'?: Date;
    'createdBy'?: CreatedBy;
    'endItem'?: ItemConnectionWithLinks;
    /**
     * Unique identifier (ID) of a connector.
     */
    'id': string;
    /**
     * Indicates whether the connector is supported at the moment. If this parameter returns `false`, we do not support the connector at the moment. We do not allow updates for unsupported connectors and we might not return all data about the connector, such as intermediate points and connection points to the canvas.
     */
    'isSupported'?: boolean;
    'links'?: SelfLink;
    /**
     * Date and time when the connector was last modified. <br>Format: UTC, adheres to [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601), includes a [trailing Z offset](https://en.wikipedia.org/wiki/ISO_8601#Coordinated_Universal_Time_(UTC)).
     */
    'modifiedAt'?: Date;
    'modifiedBy'?: ModifiedBy;
    /**
     * The path type of the connector line, defines curvature. Default: curved.
     */
    'shape'?: string | (typeof ConnectorWithLinks.ShapeEnum)[keyof typeof ConnectorWithLinks.ShapeEnum];
    'startItem'?: ItemConnectionWithLinks;
    'style'?: ConnectorStyle;
    /**
     * Type of board object that is returned.
     */
    'type'?: string;
    /** @ignore */
    static discriminator: string | undefined;
    /** @ignore */
    static attributeTypeMap: Array<{
        name: string;
        baseName: string;
        type: string;
    }>;
    /** @ignore */
    static getAttributeTypeMap(): {
        name: string;
        baseName: string;
        type: string;
    }[];
}
export declare namespace ConnectorWithLinks {
    const ShapeEnum: {
        readonly Straight: "straight";
        readonly Elbowed: "elbowed";
        readonly Curved: "curved";
    };
}
