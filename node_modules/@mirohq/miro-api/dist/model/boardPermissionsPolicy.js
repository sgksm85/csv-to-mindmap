"use strict";
/**
 * Miro Developer Platform
 * <img src=\"https://content.pstmn.io/47449ea6-0ef7-4af2-bac1-e58a70e61c58/aW1hZ2UucG5n\" width=\"1685\" height=\"593\">  ### Miro Developer Platform concepts  - New to the Miro Developer Platform? Interested in learning more about platform concepts?? [Read our introduction page](https://beta.developers.miro.com/docs/introduction) and familiarize yourself with the Miro Developer Platform capabilities in a few minutes.   ### Getting started with the Miro REST API  - [Quickstart (video):](https://beta.developers.miro.com/docs/try-out-the-rest-api-in-less-than-3-minutes) try the REST API in less than 3 minutes. - [Quickstart (article):](https://beta.developers.miro.com/docs/build-your-first-hello-world-app-1) get started and try the REST API in less than 3 minutes.   ### Miro REST API tutorials  Check out our how-to articles with step-by-step instructions and code examples so you can:  - [Get started with OAuth 2.0 and Miro](https://beta.developers.miro.com/docs/getting-started-with-oauth)   ### Miro App Examples  Clone our [Miro App Examples repository](https://github.com/miroapp/app-examples) to get inspiration, customize, and explore apps built on top of Miro\'s Developer Platform 2.0.
 *
 * The version of the OpenAPI document: v2.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.BoardPermissionsPolicy = void 0;
/**
 * @internal
 * Defines the permissions policies for the board.
 */
class BoardPermissionsPolicy {
    constructor() {
        /**
         * Defines who can start or stop timer, voting, video chat, screen sharing, attention management. Others will only be able to join. To change the value for the `collaborationToolsStartAccess` parameter, contact Miro Customer Support.
         */
        this['collaborationToolsStartAccess'] = BoardPermissionsPolicy.CollaborationToolsStartAccessEnum.AllEditors;
        /**
         * Defines who can copy the board, copy objects, download images, and save the board as a template or PDF.
         */
        this['copyAccess'] = BoardPermissionsPolicy.CopyAccessEnum.Anyone;
        /**
         * Defines who can change access and invite users to this board. To change the value for the `sharingAccess` parameter, contact Miro Customer Support.
         */
        this['sharingAccess'] = BoardPermissionsPolicy.SharingAccessEnum.TeamMembersWithEditingRights;
    }
    /** @ignore */
    static getAttributeTypeMap() {
        return BoardPermissionsPolicy.attributeTypeMap;
    }
}
exports.BoardPermissionsPolicy = BoardPermissionsPolicy;
/** @ignore */
BoardPermissionsPolicy.discriminator = undefined;
/** @ignore */
BoardPermissionsPolicy.attributeTypeMap = [
    {
        name: 'collaborationToolsStartAccess',
        baseName: 'collaborationToolsStartAccess',
        type: 'BoardPermissionsPolicy.CollaborationToolsStartAccessEnum',
    },
    {
        name: 'copyAccess',
        baseName: 'copyAccess',
        type: 'BoardPermissionsPolicy.CopyAccessEnum',
    },
    {
        name: 'sharingAccess',
        baseName: 'sharingAccess',
        type: 'BoardPermissionsPolicy.SharingAccessEnum',
    },
];
(function (BoardPermissionsPolicy) {
    BoardPermissionsPolicy.CollaborationToolsStartAccessEnum = {
        AllEditors: 'all_editors',
        BoardOwnersAndCoowners: 'board_owners_and_coowners',
    };
    BoardPermissionsPolicy.CopyAccessEnum = {
        Anyone: 'anyone',
        TeamMembers: 'team_members',
        TeamEditors: 'team_editors',
        BoardOwner: 'board_owner',
    };
    BoardPermissionsPolicy.SharingAccessEnum = {
        TeamMembersWithEditingRights: 'team_members_with_editing_rights',
        OwnerAndCoowners: 'owner_and_coowners',
    };
})(BoardPermissionsPolicy = exports.BoardPermissionsPolicy || (exports.BoardPermissionsPolicy = {}));
