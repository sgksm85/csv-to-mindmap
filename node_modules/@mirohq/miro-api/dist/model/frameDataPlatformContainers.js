"use strict";
/**
 * Miro Developer Platform
 * <img src=\"https://content.pstmn.io/47449ea6-0ef7-4af2-bac1-e58a70e61c58/aW1hZ2UucG5n\" width=\"1685\" height=\"593\">  ### Miro Developer Platform concepts  - New to the Miro Developer Platform? Interested in learning more about platform concepts?? [Read our introduction page](https://beta.developers.miro.com/docs/introduction) and familiarize yourself with the Miro Developer Platform capabilities in a few minutes.   ### Getting started with the Miro REST API  - [Quickstart (video):](https://beta.developers.miro.com/docs/try-out-the-rest-api-in-less-than-3-minutes) try the REST API in less than 3 minutes. - [Quickstart (article):](https://beta.developers.miro.com/docs/build-your-first-hello-world-app-1) get started and try the REST API in less than 3 minutes.   ### Miro REST API tutorials  Check out our how-to articles with step-by-step instructions and code examples so you can:  - [Get started with OAuth 2.0 and Miro](https://beta.developers.miro.com/docs/getting-started-with-oauth)   ### Miro App Examples  Clone our [Miro App Examples repository](https://github.com/miroapp/app-examples) to get inspiration, customize, and explore apps built on top of Miro\'s Developer Platform 2.0.
 *
 * The version of the OpenAPI document: v2.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.FrameDataPlatformContainers = void 0;
/**
 * @internal
 * Contains frame item data, such as the title, frame type, or frame format.
 */
class FrameDataPlatformContainers {
    constructor() {
        /**
         * Only custom frames are supported at the moment.
         */
        this['format'] = FrameDataPlatformContainers.FormatEnum.Custom;
        /**
         * Only free form frames are supported at the moment.
         */
        this['type'] = FrameDataPlatformContainers.TypeEnum.Freeform;
        /**
         * Hide or reveal the content inside a frame (Enterprise plan only).
         */
        this['showContent'] = true;
    }
    /** @ignore */
    static getAttributeTypeMap() {
        return FrameDataPlatformContainers.attributeTypeMap;
    }
}
exports.FrameDataPlatformContainers = FrameDataPlatformContainers;
/** @ignore */
FrameDataPlatformContainers.discriminator = undefined;
/** @ignore */
FrameDataPlatformContainers.attributeTypeMap = [
    {
        name: 'format',
        baseName: 'format',
        type: 'FrameDataPlatformContainers.FormatEnum',
    },
    {
        name: 'title',
        baseName: 'title',
        type: 'string',
    },
    {
        name: 'type',
        baseName: 'type',
        type: 'FrameDataPlatformContainers.TypeEnum',
    },
    {
        name: 'showContent',
        baseName: 'showContent',
        type: 'boolean',
    },
];
(function (FrameDataPlatformContainers) {
    FrameDataPlatformContainers.FormatEnum = {
        Custom: 'custom',
        Desktop: 'desktop',
        Phone: 'phone',
        Tablet: 'tablet',
        A4: 'a4',
        Letter: 'letter',
        Ratio1x1: 'ratio_1x1',
        Ratio4x3: 'ratio_4x3',
        Ratio16x9: 'ratio_16x9',
    };
    FrameDataPlatformContainers.TypeEnum = {
        Freeform: 'freeform',
        Heap: 'heap',
        Grid: 'grid',
        Rows: 'rows',
        Columns: 'columns',
        Unknown: 'unknown',
    };
})(FrameDataPlatformContainers = exports.FrameDataPlatformContainers || (exports.FrameDataPlatformContainers = {}));
